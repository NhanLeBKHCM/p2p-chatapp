{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\NhanLee\\\\Downloads\\\\p2p-chat\\\\example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\NhanLee\\\\Downloads\\\\p2p-chat\\\\example\\\\src\\\\components\\\\Slave\\\\Slave.tsx\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  padding: 24px;\\n  border: 1px solid black;\\n  border-top: none;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 10px;\\n  color: black;\\n  margin-bottom: 4px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 70%;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 70%;\\n  margin-top: 4px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { createRef, memo } from 'react';\nimport styled from 'styled-components';\nimport copy from 'copy-to-clipboard';\nimport { encode } from '../../util/connectionDescriptionEncoding';\nimport { PageHeader } from '../PageHeader/PageHeader';\nimport { Button } from '../Button/Button';\nimport { TextArea } from '../TextArea/TextArea';\nimport { useChat } from '../../module/useChat/useChat';\nconst CopyButton = styled(Button)(_templateObject());\nconst StyledTextArea = styled(TextArea)(_templateObject2());\nconst Instruction = styled.div(_templateObject3());\nconst Card = styled.div(_templateObject4());\nconst Container = styled.div(_templateObject5());\nexport const Slave = memo(function Slave() {\n  const _useChat = useChat(),\n        localConnectionDescription = _useChat.localConnectionDescription;\n\n  const copyTextAreaRef = createRef();\n  const encodedConnectionDescription = encode(localConnectionDescription);\n\n  const handleCopyClick = () => {\n    if (!copyTextAreaRef.current) return;\n    copyTextAreaRef.current.select();\n    copy(encodedConnectionDescription);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Joining a chat\"), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Instruction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Send back this code to your buddy:\"), /*#__PURE__*/React.createElement(StyledTextArea, {\n    ref: copyTextAreaRef,\n    value: encodedConnectionDescription,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CopyButton, {\n    onClick: handleCopyClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Copy to clipboard\")));\n});","map":{"version":3,"sources":["C:/Users/NhanLee/Downloads/p2p-chat/example/src/components/Slave/Slave.tsx"],"names":["React","createRef","memo","styled","copy","encode","PageHeader","Button","TextArea","useChat","CopyButton","StyledTextArea","Instruction","div","Card","Container","Slave","localConnectionDescription","copyTextAreaRef","encodedConnectionDescription","handleCopyClick","current","select"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,IAA/B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAASC,MAAT,QAAuB,0CAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AAGA,MAAMC,UAAU,GAAGP,MAAM,CAACI,MAAD,CAAT,mBAAhB;AAIA,MAAMI,cAAc,GAAGR,MAAM,CAACK,QAAD,CAAT,oBAApB;AAGA,MAAMI,WAAW,GAAGT,MAAM,CAACU,GAAV,oBAAjB;AAKA,MAAMC,IAAI,GAAGX,MAAM,CAACU,GAAV,oBAAV;AASA,MAAME,SAAS,GAAGZ,MAAM,CAACU,GAAV,oBAAf;AAKA,OAAO,MAAMG,KAAS,GAAGd,IAAI,CAAC,SAASc,KAAT,GAAiB;AAAA,mBACNP,OAAO,EADD;AAAA,QACrCQ,0BADqC,YACrCA,0BADqC;;AAE7C,QAAMC,eAAe,GAAGjB,SAAS,EAAjC;AAEA,QAAMkB,4BAA4B,GAAGd,MAAM,CAACY,0BAAD,CAA3C;;AAEA,QAAMG,eAAe,GAAG,MAAM;AAC5B,QAAI,CAACF,eAAe,CAACG,OAArB,EAA8B;AAE9BH,IAAAA,eAAe,CAACG,OAAhB,CAAwBC,MAAxB;AACAlB,IAAAA,IAAI,CAACe,4BAAD,CAAJ;AACD,GALD;;AAOA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,eAEE,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAED,eAArB;AAAsC,IAAA,KAAK,EAAEC,4BAA7C;AAA2E,IAAA,QAAQ,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,CAFF,CADF;AAUD,CAvB4B,CAAtB","sourcesContent":["import React, { FC, createRef, memo } from 'react';\r\nimport styled from 'styled-components';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nimport { encode } from '../../util/connectionDescriptionEncoding';\r\nimport { PageHeader } from '../PageHeader/PageHeader';\r\nimport { Button } from '../Button/Button';\r\nimport { TextArea } from '../TextArea/TextArea';\r\nimport { useChat } from '../../module/useChat/useChat';\r\nimport { ConnectionDescription } from '../../module/PeerConnection/PeerConnection';\r\n\r\nconst CopyButton = styled(Button)`\r\n  width: 70%;\r\n  margin-top: 4px;\r\n`;\r\nconst StyledTextArea = styled(TextArea)`\r\n  width: 70%;\r\n`;\r\nconst Instruction = styled.div`\r\n  font-size: 10px;\r\n  color: black;\r\n  margin-bottom: 4px;\r\n`;\r\nconst Card = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 24px;\r\n  border: 1px solid black;\r\n  border-top: none;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Slave: FC = memo(function Slave() {\r\n  const { localConnectionDescription } = useChat();\r\n  const copyTextAreaRef = createRef<HTMLTextAreaElement>();\r\n\r\n  const encodedConnectionDescription = encode(localConnectionDescription as ConnectionDescription);\r\n\r\n  const handleCopyClick = () => {\r\n    if (!copyTextAreaRef.current) return;\r\n\r\n    copyTextAreaRef.current.select();\r\n    copy(encodedConnectionDescription);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader>Joining a chat</PageHeader>\r\n      <Card>\r\n        <Instruction>Send back this code to your buddy:</Instruction>\r\n        <StyledTextArea ref={copyTextAreaRef} value={encodedConnectionDescription} readOnly />\r\n        <CopyButton onClick={handleCopyClick}>Copy to clipboard</CopyButton>\r\n      </Card>\r\n    </Container>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}