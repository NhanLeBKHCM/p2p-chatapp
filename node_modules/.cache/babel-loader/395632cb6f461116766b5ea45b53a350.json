{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\NhanLee\\\\Downloads\\\\p2p-chat\\\\example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\NhanLee\\\\Downloads\\\\p2p-chat\\\\example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\NhanLee\\\\Downloads\\\\p2p-chat\\\\example\\\\src\\\\components\\\\HostOrSlave\\\\HostOrSlave.tsx\";\n\nfunction _templateObject9() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  const data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  display: flex;\\n  width: 100%;\\n  height: 200px;\\n  align-items: stretch;\\n  border: 1px solid black;\\n  border-top: none;\\n\\n  > \", \" {\\n    width: 100%;\\n    border-left: 1px solid black;\\n\\n    &:first-child {\\n      border-left: none;\\n    }\\n  }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: center;\\n  width: 20px;\\n  height: 20px;\\n  font-size: 10px;\\n  background-color: black;\\n  color: white;\\n  border-radius: 50%;\\n  transform: translate(-50%, -50%);\\n\\n  > span {\\n    transform: translate(0.5px, -1.5px);\\n    line-height: 1;\\n  }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100px;\\n  margin-top: 4px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, memo } from 'react';\nimport styled from 'styled-components';\nimport { connectionDescriptionValidator } from '../../util/connectionDescriptionValidator';\nimport { decode } from '../../util/connectionDescriptionEncoding';\nimport { PageHeader } from '../PageHeader/PageHeader';\nimport { Button } from '../Button/Button';\nimport { TextArea } from '../TextArea/TextArea';\nimport { useChat } from '../../module/useChat/useChat';\nconst InvitationTextArea = styled(TextArea)(_templateObject());\nconst HostButton = styled(Button)(_templateObject2());\nconst SlaveButton = styled(Button)(_templateObject3());\nconst ErrorMessage = styled.div(_templateObject4());\nconst Form = styled.form(_templateObject5());\nconst Card = styled.div(_templateObject6());\nconst Or = styled.div(_templateObject7());\nconst CardContainer = styled.div(_templateObject8(), Card);\nconst Container = styled.div(_templateObject9());\nexport const HostOrSlave = memo(function HostOrSlave() {\n  const _useChat = useChat(),\n        startAsHost = _useChat.startAsHost,\n        startAsSlave = _useChat.startAsSlave;\n\n  const _React$useState = React.useState(''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        connectionDescription = _React$useState2[0],\n        setConnectionDescription = _React$useState2[1];\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const handleHostBtnClick = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    startAsHost();\n  };\n\n  const handleConnectionDescriptionInputChange = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    setError('');\n    setConnectionDescription(event.target.value);\n  };\n\n  const handleSlaveFormSubmit = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    try {\n      const connectionDescriptionObject = decode(connectionDescription);\n      if (connectionDescriptionValidator(connectionDescriptionObject)) throw new Error();\n      startAsSlave(connectionDescriptionObject);\n    } catch (error) {\n      setError('Connection Description invalid!');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"Select how would you like to start a chat\"), /*#__PURE__*/React.createElement(CardContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HostButton, {\n    onClick: handleHostBtnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"New chat\")), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSlaveFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InvitationTextArea, {\n    value: connectionDescription,\n    onChange: handleConnectionDescriptionInputChange,\n    placeholder: \"Invitation code here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), !!error && /*#__PURE__*/React.createElement(ErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, error), /*#__PURE__*/React.createElement(SlaveButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Join a chat\"))), /*#__PURE__*/React.createElement(Or, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"or\"))));\n});","map":{"version":3,"sources":["C:/Users/NhanLee/Downloads/p2p-chat/example/src/components/HostOrSlave/HostOrSlave.tsx"],"names":["React","useState","memo","styled","connectionDescriptionValidator","decode","PageHeader","Button","TextArea","useChat","InvitationTextArea","HostButton","SlaveButton","ErrorMessage","div","Form","form","Card","Or","CardContainer","Container","HostOrSlave","startAsHost","startAsSlave","connectionDescription","setConnectionDescription","error","setError","handleHostBtnClick","event","preventDefault","stopPropagation","handleConnectionDescriptionInputChange","target","value","handleSlaveFormSubmit","connectionDescriptionObject","Error"],"mappings":"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","sourcesContent":["import React, { FC, useState, MouseEventHandler, ChangeEventHandler, FormEventHandler, memo } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { connectionDescriptionValidator } from '../../util/connectionDescriptionValidator';\r\nimport { decode } from '../../util/connectionDescriptionEncoding';\r\nimport { PageHeader } from '../PageHeader/PageHeader';\r\nimport { Button } from '../Button/Button';\r\nimport { TextArea } from '../TextArea/TextArea';\r\nimport { useChat } from '../../module/useChat/useChat';\r\nimport { ConnectionDescription } from '../../module/PeerConnection/PeerConnection';\r\n\r\nconst InvitationTextArea = styled(TextArea)`\r\n  width: 100px;\r\n`;\r\nconst HostButton = styled(Button)`\r\n  width: 100px;\r\n`;\r\nconst SlaveButton = styled(Button)`\r\n  width: 100px;\r\n  margin-top: 4px;\r\n`;\r\nconst ErrorMessage = styled.div``;\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Card = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Or = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  width: 20px;\r\n  height: 20px;\r\n  font-size: 10px;\r\n  background-color: black;\r\n  color: white;\r\n  border-radius: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  > span {\r\n    transform: translate(0.5px, -1.5px);\r\n    line-height: 1;\r\n  }\r\n`;\r\nconst CardContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  width: 100%;\r\n  height: 200px;\r\n  align-items: stretch;\r\n  border: 1px solid black;\r\n  border-top: none;\r\n\r\n  > ${Card} {\r\n    width: 100%;\r\n    border-left: 1px solid black;\r\n\r\n    &:first-child {\r\n      border-left: none;\r\n    }\r\n  }\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const HostOrSlave: FC = memo(function HostOrSlave() {\r\n  const { startAsHost, startAsSlave } = useChat();\r\n  const [connectionDescription, setConnectionDescription] = React.useState<string>('');\r\n  const [error, setError] = useState<string>('');\r\n\r\n  const handleHostBtnClick: MouseEventHandler<HTMLButtonElement> = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    startAsHost();\r\n  };\r\n\r\n  const handleConnectionDescriptionInputChange: ChangeEventHandler<HTMLTextAreaElement> = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    setError('');\r\n    setConnectionDescription(event.target.value);\r\n  };\r\n\r\n  const handleSlaveFormSubmit: FormEventHandler = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    try {\r\n      const connectionDescriptionObject = decode(connectionDescription);\r\n      if (connectionDescriptionValidator(connectionDescriptionObject)) throw new Error();\r\n      startAsSlave(connectionDescriptionObject as ConnectionDescription);\r\n    } catch (error) {\r\n      setError('Connection Description invalid!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader>Select how would you like to start a chat</PageHeader>\r\n      <CardContainer>\r\n        <Card>\r\n          <HostButton onClick={handleHostBtnClick}>New chat</HostButton>\r\n        </Card>\r\n        <Card>\r\n          <Form onSubmit={handleSlaveFormSubmit}>\r\n            <InvitationTextArea\r\n              value={connectionDescription}\r\n              onChange={handleConnectionDescriptionInputChange}\r\n              placeholder=\"Invitation code here...\"\r\n            />\r\n            {!!error && <ErrorMessage>{error}</ErrorMessage>}\r\n            <SlaveButton type=\"submit\">Join a chat</SlaveButton>\r\n          </Form>\r\n        </Card>\r\n        <Or>\r\n          <span>or</span>\r\n        </Or>\r\n      </CardContainer>\r\n    </Container>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}