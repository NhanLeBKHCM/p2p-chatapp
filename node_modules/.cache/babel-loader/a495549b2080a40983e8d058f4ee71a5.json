{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\NhanLee\\\\Downloads\\\\p2p-chat\\\\example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\NhanLee\\\\Downloads\\\\p2p-chat\\\\example\\\\src\\\\components\\\\Chat\\\\ChatMessage.tsx\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n          background-color: cyan;\\n        \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  padding: 4px;\\n  background-color: greenyellow;\\n\\n  \", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 12px;\\n\\n  > span {\\n    font-weight: 700;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { memo } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MESSAGE_SENDER } from '../../types/MessageSenderEnum';\nimport { useFileBuffer } from '../../module/FileBuffers/FileBuffers';\nconst Text = styled.div(_templateObject());\nconst Header = styled.div(_templateObject2());\nconst Message = styled.div(_templateObject3(), ({\n  sender\n}) => sender === MESSAGE_SENDER.ME ? css(_templateObject4()) : '');\nconst ChatFileMessage = memo(function ChatFileMessage({\n  chatMessage\n}) {\n  const _useFileBuffer = useFileBuffer(chatMessage.fileId),\n        fileName = _useFileBuffer.fileName,\n        fileSize = _useFileBuffer.fileSize,\n        receivedSize = _useFileBuffer.receivedSize,\n        receivedBlobUrl = _useFileBuffer.receivedBlobUrl;\n\n  if (typeof fileSize === 'undefined' || typeof fileName === 'undefined') {\n    return /*#__PURE__*/React.createElement(Message, {\n      sender: chatMessage.sender,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, chatMessage.sender === MESSAGE_SENDER.ME ? 'Me' : 'Friend'), \" (\", new Date(chatMessage.timestamp).toLocaleTimeString(), \")\"), /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"File in progress...\"));\n  }\n\n  if (!receivedBlobUrl) {\n    return /*#__PURE__*/React.createElement(Message, {\n      sender: chatMessage.sender,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, chatMessage.sender === MESSAGE_SENDER.ME ? 'Me' : 'Friend'), \" (\", new Date(chatMessage.timestamp).toLocaleTimeString(), \")\"), /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, fileName, \" \", Math.floor(receivedSize / fileSize * 100), \"%\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Message, {\n    sender: chatMessage.sender,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, chatMessage.sender === MESSAGE_SENDER.ME ? 'Me' : 'Friend'), \" (\", new Date(chatMessage.timestamp).toLocaleTimeString(), \")\"), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: receivedBlobUrl,\n    download: fileName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, fileName)));\n});\nconst ChatTextMessage = memo(function ChatTextMessage({\n  chatMessage\n}) {\n  return /*#__PURE__*/React.createElement(Message, {\n    sender: chatMessage.sender,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, chatMessage.sender === MESSAGE_SENDER.ME ? 'Me' : 'Friend'), \" (\", new Date(chatMessage.timestamp).toLocaleTimeString(), \")\"), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, chatMessage.text));\n});\nexport const ChatMessage = memo(function ChatMessage({\n  chatMessage\n}) {\n  if (chatMessage.fileId) return /*#__PURE__*/React.createElement(ChatFileMessage, {\n    chatMessage: chatMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 34\n    }\n  });\n  return /*#__PURE__*/React.createElement(ChatTextMessage, {\n    chatMessage: chatMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }\n  });\n});","map":{"version":3,"sources":["C:/Users/NhanLee/Downloads/p2p-chat/example/src/components/Chat/ChatMessage.tsx"],"names":["React","memo","styled","css","MESSAGE_SENDER","useFileBuffer","Text","div","Header","Message","sender","ME","ChatFileMessage","chatMessage","fileId","fileName","fileSize","receivedSize","receivedBlobUrl","Date","timestamp","toLocaleTimeString","Math","floor","ChatTextMessage","text","ChatMessage"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAoBC,IAApB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,SAASC,cAAT,QAA+B,+BAA/B;AAEA,SAASC,aAAT,QAA8B,sCAA9B;AAEA,MAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAV,mBAAV;AACA,MAAMC,MAAM,GAAGN,MAAM,CAACK,GAAV,oBAAZ;AAOA,MAAME,OAAO,GAAGP,MAAM,CAACK,GAAV,qBAIT,CAAC;AAAEG,EAAAA;AAAF,CAAD,KACAA,MAAM,KAAKN,cAAc,CAACO,EAA1B,GACIR,GADJ,uBAII,EATK,CAAb;AAoBA,MAAMS,eAAyC,GAAGX,IAAI,CAAC,SAASW,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAA0C;AAAA,yBACjCR,aAAa,CAACQ,WAAW,CAACC,MAAb,CADoB;AAAA,QACvFC,QADuF,kBACvFA,QADuF;AAAA,QAC7EC,QAD6E,kBAC7EA,QAD6E;AAAA,QACnEC,YADmE,kBACnEA,YADmE;AAAA,QACrDC,eADqD,kBACrDA,eADqD;;AAG/F,MAAI,OAAOF,QAAP,KAAoB,WAApB,IAAmC,OAAOD,QAAP,KAAoB,WAA3D,EAAwE;AACtE,wBACE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAEF,WAAW,CAACH,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOG,WAAW,CAACH,MAAZ,KAAuBN,cAAc,CAACO,EAAtC,GAA2C,IAA3C,GAAkD,QAAzD,CADF,QAEG,IAAIQ,IAAJ,CAASN,WAAW,CAACO,SAArB,EAAgCC,kBAAhC,EAFH,MADF,eAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALF,CADF;AASD;;AAED,MAAI,CAACH,eAAL,EAAsB;AACpB,wBACE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAEL,WAAW,CAACH,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOG,WAAW,CAACH,MAAZ,KAAuBN,cAAc,CAACO,EAAtC,GAA2C,IAA3C,GAAkD,QAAzD,CADF,QAEG,IAAIQ,IAAJ,CAASN,WAAW,CAACO,SAArB,EAAgCC,kBAAhC,EAFH,MADF,eAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,QADH,OACcO,IAAI,CAACC,KAAL,CAAYN,YAAY,GAAGD,QAAhB,GAA4B,GAAvC,CADd,MALF,CADF;AAWD;;AAED,sBACE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEH,WAAW,CAACH,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOG,WAAW,CAACH,MAAZ,KAAuBN,cAAc,CAACO,EAAtC,GAA2C,IAA3C,GAAkD,QAAzD,CADF,QAEG,IAAIQ,IAAJ,CAASN,WAAW,CAACO,SAArB,EAAgCC,kBAAhC,EAFH,MADF,eAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAEH,eAAT;AAA0B,IAAA,QAAQ,EAAEH,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QADH,CADF,CALF,CADF;AAaD,CA1CqD,CAAtD;AA4CA,MAAMS,eAA0B,GAAGvB,IAAI,CAAC,SAASuB,eAAT,CAAyB;AAAEX,EAAAA;AAAF,CAAzB,EAA0C;AAChF,sBACE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEA,WAAW,CAACH,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOG,WAAW,CAACH,MAAZ,KAAuBN,cAAc,CAACO,EAAtC,GAA2C,IAA3C,GAAkD,QAAzD,CADF,QAEG,IAAIQ,IAAJ,CAASN,WAAW,CAACO,SAArB,EAAgCC,kBAAhC,EAFH,MADF,eAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,WAAW,CAACY,IAAnB,CALF,CADF;AASD,CAVsC,CAAvC;AAgBA,OAAO,MAAMC,WAAsB,GAAGzB,IAAI,CAAC,SAASyB,WAAT,CAAqB;AAAEb,EAAAA;AAAF,CAArB,EAAsC;AAC/E,MAAIA,WAAW,CAACC,MAAhB,EAAwB,oBAAO,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAED,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAExB,sBAAO,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAEA,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAJyC,CAAnC","sourcesContent":["import React, { FC, memo } from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { MESSAGE_SENDER } from '../../types/MessageSenderEnum';\r\nimport { ChatMessageType } from '../../types/ChatMessageType';\r\nimport { useFileBuffer } from '../../module/FileBuffers/FileBuffers';\r\n\r\nconst Text = styled.div``;\r\nconst Header = styled.div`\r\n  font-size: 12px;\r\n\r\n  > span {\r\n    font-weight: 700;\r\n  }\r\n`;\r\nconst Message = styled.div<{ sender: MESSAGE_SENDER }>`\r\n  padding: 4px;\r\n  background-color: greenyellow;\r\n\r\n  ${({ sender }) =>\r\n    sender === MESSAGE_SENDER.ME\r\n      ? css`\r\n          background-color: cyan;\r\n        `\r\n      : ''};\r\n`;\r\n\r\ninterface ChatFileMessageType extends ChatMessageType {\r\n  fileId: string;\r\n}\r\n\r\ninterface ChatFileMessageProps {\r\n  chatMessage: ChatFileMessageType;\r\n}\r\n\r\nconst ChatFileMessage: FC<ChatFileMessageProps> = memo(function ChatFileMessage({ chatMessage }) {\r\n  const { fileName, fileSize, receivedSize, receivedBlobUrl } = useFileBuffer(chatMessage.fileId);\r\n\r\n  if (typeof fileSize === 'undefined' || typeof fileName === 'undefined') {\r\n    return (\r\n      <Message sender={chatMessage.sender}>\r\n        <Header>\r\n          <span>{chatMessage.sender === MESSAGE_SENDER.ME ? 'Me' : 'Friend'}</span> (\r\n          {new Date(chatMessage.timestamp).toLocaleTimeString()})\r\n        </Header>\r\n        <Text>File in progress...</Text>\r\n      </Message>\r\n    );\r\n  }\r\n\r\n  if (!receivedBlobUrl) {\r\n    return (\r\n      <Message sender={chatMessage.sender}>\r\n        <Header>\r\n          <span>{chatMessage.sender === MESSAGE_SENDER.ME ? 'Me' : 'Friend'}</span> (\r\n          {new Date(chatMessage.timestamp).toLocaleTimeString()})\r\n        </Header>\r\n        <Text>\r\n          {fileName} {Math.floor((receivedSize / fileSize) * 100)}%\r\n        </Text>\r\n      </Message>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Message sender={chatMessage.sender}>\r\n      <Header>\r\n        <span>{chatMessage.sender === MESSAGE_SENDER.ME ? 'Me' : 'Friend'}</span> (\r\n        {new Date(chatMessage.timestamp).toLocaleTimeString()})\r\n      </Header>\r\n      <Text>\r\n        <a href={receivedBlobUrl} download={fileName}>\r\n          {fileName}\r\n        </a>\r\n      </Text>\r\n    </Message>\r\n  );\r\n});\r\n\r\nconst ChatTextMessage: FC<Props> = memo(function ChatTextMessage({ chatMessage }) {\r\n  return (\r\n    <Message sender={chatMessage.sender}>\r\n      <Header>\r\n        <span>{chatMessage.sender === MESSAGE_SENDER.ME ? 'Me' : 'Friend'}</span> (\r\n        {new Date(chatMessage.timestamp).toLocaleTimeString()})\r\n      </Header>\r\n      <Text>{chatMessage.text}</Text>\r\n    </Message>\r\n  );\r\n});\r\n\r\ninterface Props {\r\n  chatMessage: ChatMessageType;\r\n}\r\n\r\nexport const ChatMessage: FC<Props> = memo(function ChatMessage({ chatMessage }) {\r\n  if (chatMessage.fileId) return <ChatFileMessage chatMessage={chatMessage as ChatFileMessageType} />;\r\n\r\n  return <ChatTextMessage chatMessage={chatMessage} />;\r\n});\r\n"]},"metadata":{},"sourceType":"module"}