{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\NhanLee\\\\Downloads\\\\p2p-chat\\\\example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\NhanLee\\\\Downloads\\\\p2p-chat\\\\example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\NhanLee\\\\Downloads\\\\p2p-chat\\\\example\\\\src\\\\components\\\\Host\\\\Host.tsx\";\n\nfunction _templateObject9() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  const data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  padding: 24px;\\n  border: 1px solid black;\\n  border-top: none;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 8px;\\n  left: 8px;\\n  width: 18px;\\n  height: 18px;\\n  background-color: black;\\n  color: white;\\n  font-size: 10px;\\n  border-radius: 50%;\\n  line-height: 1;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: center;\\n\\n  > span {\\n    display: inline-block;\\n    transform: translate(0.5px, -0.5px);\\n  }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 10px;\\n  color: black;\\n  margin-bottom: 4px;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 70%;\\n  margin-top: 4px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 70%;\\n  margin-top: 4px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 70%;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, createRef, memo } from 'react';\nimport styled from 'styled-components';\nimport copy from 'copy-to-clipboard';\nimport { encode, decode } from '../../util/connectionDescriptionEncoding';\nimport { connectionDescriptionValidator } from '../../util/connectionDescriptionValidator';\nimport { PageHeader } from '../PageHeader/PageHeader';\nimport { TextArea } from '../TextArea/TextArea';\nimport { Button } from '../Button/Button';\nimport { useChat } from '../../module/useChat/useChat';\nconst ErrorMessage = styled.div(_templateObject());\nconst StyledTextArea = styled(TextArea)(_templateObject2());\nconst ConnectButton = styled(Button)(_templateObject3());\nconst CopyButton = styled(Button)(_templateObject4());\nconst Form = styled.form(_templateObject5());\nconst Instruction = styled.div(_templateObject6());\nconst Step = styled.div(_templateObject7());\nconst Card = styled.div(_templateObject8());\nconst Container = styled.div(_templateObject9());\nexport const Host = memo(function Host() {\n  const _useChat = useChat(),\n        localConnectionDescription = _useChat.localConnectionDescription,\n        setRemoteConnectionDescription = _useChat.setRemoteConnectionDescription;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        remoteConnectionDescriptionInputValue = _useState2[0],\n        setRemoteConnectionDescriptionInputValue = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const copyTextAreaRef = createRef();\n  const encodedConnectionDescription = encode(localConnectionDescription);\n\n  const handleCopyClick = () => {\n    if (!copyTextAreaRef.current) return;\n    copyTextAreaRef.current.select();\n    copy(encodedConnectionDescription);\n  };\n\n  const handleRemoteConnectionDescriptionInputChange = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    setError('');\n    setRemoteConnectionDescriptionInputValue(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    try {\n      event.stopPropagation();\n      event.preventDefault();\n      const connectionDescriptionObject = decode(remoteConnectionDescriptionInputValue);\n      if (connectionDescriptionValidator(connectionDescriptionObject)) throw new Error();\n      setRemoteConnectionDescription(connectionDescriptionObject);\n    } catch (error) {\n      setError('Connection Description invalid!');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"Starting a new chat\"), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Step, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"1\")), /*#__PURE__*/React.createElement(Instruction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"Send this code to your buddy:\"), /*#__PURE__*/React.createElement(StyledTextArea, {\n    ref: copyTextAreaRef,\n    value: encodedConnectionDescription,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CopyButton, {\n    onClick: handleCopyClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Copy to clipboard\")), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Step, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"2\")), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Instruction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"Code from your buddy:\"), /*#__PURE__*/React.createElement(StyledTextArea, {\n    value: remoteConnectionDescriptionInputValue,\n    onChange: handleRemoteConnectionDescriptionInputChange,\n    placeholder: \"Paste an answer code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ConnectButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"Connect\")), !!error && /*#__PURE__*/React.createElement(ErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, error)));\n});","map":{"version":3,"sources":["C:/Users/NhanLee/Downloads/p2p-chat/example/src/components/Host/Host.tsx"],"names":["React","useState","createRef","memo","styled","copy","encode","decode","connectionDescriptionValidator","PageHeader","TextArea","Button","useChat","ErrorMessage","div","StyledTextArea","ConnectButton","CopyButton","Form","form","Instruction","Step","Card","Container","Host","localConnectionDescription","setRemoteConnectionDescription","remoteConnectionDescriptionInputValue","setRemoteConnectionDescriptionInputValue","error","setError","copyTextAreaRef","encodedConnectionDescription","handleCopyClick","current","select","handleRemoteConnectionDescriptionInputChange","event","preventDefault","stopPropagation","target","value","handleSubmit","connectionDescriptionObject","Error"],"mappings":"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","sourcesContent":["import React, { useState, createRef, FC, memo } from 'react';\r\nimport styled from 'styled-components';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nimport { encode, decode } from '../../util/connectionDescriptionEncoding';\r\nimport { connectionDescriptionValidator } from '../../util/connectionDescriptionValidator';\r\nimport { PageHeader } from '../PageHeader/PageHeader';\r\nimport { TextArea } from '../TextArea/TextArea';\r\nimport { Button } from '../Button/Button';\r\nimport { useChat } from '../../module/useChat/useChat';\r\nimport { ConnectionDescription } from '../../module/PeerConnection/PeerConnection';\r\n\r\nconst ErrorMessage = styled.div``;\r\nconst StyledTextArea = styled(TextArea)`\r\n  width: 70%;\r\n`;\r\nconst ConnectButton = styled(Button)`\r\n  width: 70%;\r\n  margin-top: 4px;\r\n`;\r\nconst CopyButton = styled(Button)`\r\n  width: 70%;\r\n  margin-top: 4px;\r\n`;\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst Instruction = styled.div`\r\n  font-size: 10px;\r\n  color: black;\r\n  margin-bottom: 4px;\r\n`;\r\nconst Step = styled.div`\r\n  position: absolute;\r\n  top: 8px;\r\n  left: 8px;\r\n  width: 18px;\r\n  height: 18px;\r\n  background-color: black;\r\n  color: white;\r\n  font-size: 10px;\r\n  border-radius: 50%;\r\n  line-height: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n\r\n  > span {\r\n    display: inline-block;\r\n    transform: translate(0.5px, -0.5px);\r\n  }\r\n`;\r\nconst Card = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 24px;\r\n  border: 1px solid black;\r\n  border-top: none;\r\n`;\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport interface HostProps {\r\n  connectionDescription: ConnectionDescription;\r\n  onSubmit: (remoteConnectionDescription: ConnectionDescription) => any;\r\n}\r\n\r\nexport const Host: FC = memo(function Host() {\r\n  const { localConnectionDescription, setRemoteConnectionDescription } = useChat();\r\n  const [remoteConnectionDescriptionInputValue, setRemoteConnectionDescriptionInputValue] = useState<string>('');\r\n  const [error, setError] = useState<string>('');\r\n  const copyTextAreaRef = createRef<HTMLTextAreaElement>();\r\n\r\n  const encodedConnectionDescription = encode(localConnectionDescription as ConnectionDescription);\r\n\r\n  const handleCopyClick = () => {\r\n    if (!copyTextAreaRef.current) return;\r\n\r\n    copyTextAreaRef.current.select();\r\n    copy(encodedConnectionDescription);\r\n  };\r\n\r\n  const handleRemoteConnectionDescriptionInputChange: React.ChangeEventHandler<HTMLTextAreaElement> = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    setError('');\r\n    setRemoteConnectionDescriptionInputValue(event.target.value);\r\n  };\r\n\r\n  const handleSubmit: React.FormEventHandler = (event) => {\r\n    try {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n      const connectionDescriptionObject = decode(remoteConnectionDescriptionInputValue);\r\n      if (connectionDescriptionValidator(connectionDescriptionObject)) throw new Error();\r\n      setRemoteConnectionDescription(connectionDescriptionObject as ConnectionDescription);\r\n    } catch (error) {\r\n      setError('Connection Description invalid!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader>Starting a new chat</PageHeader>\r\n      <Card>\r\n        <Step>\r\n          <span>1</span>\r\n        </Step>\r\n        <Instruction>Send this code to your buddy:</Instruction>\r\n        <StyledTextArea ref={copyTextAreaRef} value={encodedConnectionDescription} readOnly />\r\n        <CopyButton onClick={handleCopyClick}>Copy to clipboard</CopyButton>\r\n      </Card>\r\n      <Card>\r\n        <Step>\r\n          <span>2</span>\r\n        </Step>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Instruction>Code from your buddy:</Instruction>\r\n          <StyledTextArea\r\n            value={remoteConnectionDescriptionInputValue}\r\n            onChange={handleRemoteConnectionDescriptionInputChange}\r\n            placeholder=\"Paste an answer code\"\r\n          />\r\n          <ConnectButton type=\"submit\">Connect</ConnectButton>\r\n        </Form>\r\n        {!!error && <ErrorMessage>{error}</ErrorMessage>}\r\n      </Card>\r\n    </Container>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}